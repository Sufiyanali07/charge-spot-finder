{"ast":null,"code":"import { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'StationForm',\n  data() {\n    return {\n      stationData: {\n        name: '',\n        status: 'Active',\n        address: '',\n        location: {\n          latitude: null,\n          longitude: null\n        },\n        powerOutput: null,\n        connectorType: 'Type 2',\n        pricePerKwh: 0,\n        availableHours: {\n          open: '00:00',\n          close: '23:59'\n        }\n      },\n      isEditMode: false\n    };\n  },\n  computed: {\n    ...mapGetters(['loading', 'error', 'currentStation']),\n    stationId() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    ...mapActions(['createStation', 'updateStation', 'fetchStation', 'clearError']),\n    async handleSubmit() {\n      try {\n        if (this.isEditMode) {\n          await this.updateStation({\n            stationId: this.stationId,\n            stationData: this.stationData\n          });\n        } else {\n          await this.createStation(this.stationData);\n        }\n      } catch (error) {\n        console.error('Error saving station:', error);\n      }\n    },\n    async loadStationData() {\n      if (this.stationId) {\n        this.isEditMode = true;\n        try {\n          await this.fetchStation(this.stationId);\n          if (this.currentStation) {\n            // Copy station data to form\n            this.stationData = {\n              name: this.currentStation.name,\n              status: this.currentStation.status,\n              address: this.currentStation.address || '',\n              location: {\n                latitude: this.currentStation.location.latitude,\n                longitude: this.currentStation.location.longitude\n              },\n              powerOutput: this.currentStation.powerOutput,\n              connectorType: this.currentStation.connectorType,\n              pricePerKwh: this.currentStation.pricePerKwh || 0,\n              availableHours: {\n                open: this.currentStation.availableHours?.open || '00:00',\n                close: this.currentStation.availableHours?.close || '23:59'\n              }\n            };\n          }\n        } catch (error) {\n          console.error('Error loading station:', error);\n          this.$router.push('/stations');\n        }\n      }\n    }\n  },\n  created() {\n    this.clearError();\n    this.loadStationData();\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","name","data","stationData","status","address","location","latitude","longitude","powerOutput","connectorType","pricePerKwh","availableHours","open","close","isEditMode","computed","stationId","$route","params","id","methods","handleSubmit","updateStation","createStation","error","console","loadStationData","fetchStation","currentStation","$router","push","created","clearError"],"sources":["C:\\Users\\admin\\OneDrive\\Desktop\\3june\\frontend\\src\\views\\StationForm.vue"],"sourcesContent":["<template>\n  <div class=\"station-form\">\n    <h2>{{ isEditMode ? 'Edit' : 'Add' }} Charging Station</h2>\n    \n    <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n      {{ error }}\n    </div>\n\n    <div class=\"card mt-4\">\n      <div class=\"card-body\">\n        <form @submit.prevent=\"handleSubmit\">\n          <!-- Basic Information -->\n          <h4 class=\"mb-3\">Basic Information</h4>\n          <div class=\"row mb-4\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"name\" class=\"form-label\">Station Name*</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"name\"\n                v-model=\"stationData.name\"\n                required\n                placeholder=\"Enter station name\"\n              >\n            </div>\n            \n            <div class=\"col-md-6 mb-3\">\n              <label for=\"status\" class=\"form-label\">Status*</label>\n              <select\n                id=\"status\"\n                class=\"form-select\"\n                v-model=\"stationData.status\"\n                required\n              >\n                <option value=\"Active\">Active</option>\n                <option value=\"Inactive\">Inactive</option>\n                <option value=\"Maintenance\">Maintenance</option>\n              </select>\n            </div>\n            \n            <div class=\"col-md-12 mb-3\">\n              <label for=\"address\" class=\"form-label\">Address</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"address\"\n                v-model=\"stationData.address\"\n                placeholder=\"Enter full address\"\n              >\n            </div>\n          </div>\n          \n          <!-- Location Information -->\n          <h4 class=\"mb-3\">Location (Coordinates)*</h4>\n          <div class=\"row mb-4\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"latitude\" class=\"form-label\">Latitude*</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"latitude\"\n                v-model.number=\"stationData.location.latitude\"\n                required\n                step=\"any\"\n                min=\"-90\"\n                max=\"90\"\n                placeholder=\"e.g. 40.7128\"\n              >\n            </div>\n            \n            <div class=\"col-md-6 mb-3\">\n              <label for=\"longitude\" class=\"form-label\">Longitude*</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"longitude\"\n                v-model.number=\"stationData.location.longitude\"\n                required\n                step=\"any\"\n                min=\"-180\"\n                max=\"180\"\n                placeholder=\"e.g. -74.0060\"\n              >\n            </div>\n            \n            <div class=\"col-12\">\n              <div class=\"alert alert-info\">\n                <i class=\"bi bi-info-circle\"></i> Tip: You can find coordinates by right-clicking on Google Maps and selecting \"What's here?\"\n              </div>\n            </div>\n          </div>\n          \n          <!-- Technical Information -->\n          <h4 class=\"mb-3\">Technical Details</h4>\n          <div class=\"row mb-4\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"powerOutput\" class=\"form-label\">Power Output (kW)*</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"powerOutput\"\n                v-model.number=\"stationData.powerOutput\"\n                required\n                min=\"0\"\n                step=\"0.1\"\n                placeholder=\"e.g. 50\"\n              >\n            </div>\n            \n            <div class=\"col-md-6 mb-3\">\n              <label for=\"connectorType\" class=\"form-label\">Connector Type*</label>\n              <select\n                id=\"connectorType\"\n                class=\"form-select\"\n                v-model=\"stationData.connectorType\"\n                required\n              >\n                <option value=\"Type 1\">Type 1</option>\n                <option value=\"Type 2\">Type 2</option>\n                <option value=\"CCS\">CCS</option>\n                <option value=\"CHAdeMO\">CHAdeMO</option>\n                <option value=\"Tesla\">Tesla</option>\n              </select>\n            </div>\n            \n            <div class=\"col-md-6 mb-3\">\n              <label for=\"pricePerKwh\" class=\"form-label\">Price per kWh ($)</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"pricePerKwh\"\n                v-model.number=\"stationData.pricePerKwh\"\n                min=\"0\"\n                step=\"0.01\"\n                placeholder=\"e.g. 0.25\"\n              >\n            </div>\n          </div>\n          \n          <!-- Operating Hours -->\n          <h4 class=\"mb-3\">Operating Hours</h4>\n          <div class=\"row mb-4\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"openTime\" class=\"form-label\">Opening Time</label>\n              <input\n                type=\"time\"\n                class=\"form-control\"\n                id=\"openTime\"\n                v-model=\"stationData.availableHours.open\"\n              >\n            </div>\n            \n            <div class=\"col-md-6 mb-3\">\n              <label for=\"closeTime\" class=\"form-label\">Closing Time</label>\n              <input\n                type=\"time\"\n                class=\"form-control\"\n                id=\"closeTime\"\n                v-model=\"stationData.availableHours.close\"\n              >\n            </div>\n          </div>\n          \n          <!-- Submit Buttons -->\n          <div class=\"d-flex justify-content-between\">\n            <router-link to=\"/stations\" class=\"btn btn-secondary\">\n              Cancel\n            </router-link>\n            <button \n              type=\"submit\" \n              class=\"btn btn-primary\"\n              :disabled=\"loading\"\n            >\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\n              {{ isEditMode ? 'Update' : 'Create' }} Station\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'StationForm',\n  data() {\n    return {\n      stationData: {\n        name: '',\n        status: 'Active',\n        address: '',\n        location: {\n          latitude: null,\n          longitude: null\n        },\n        powerOutput: null,\n        connectorType: 'Type 2',\n        pricePerKwh: 0,\n        availableHours: {\n          open: '00:00',\n          close: '23:59'\n        }\n      },\n      isEditMode: false\n    }\n  },\n  computed: {\n    ...mapGetters(['loading', 'error', 'currentStation']),\n    stationId() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    ...mapActions(['createStation', 'updateStation', 'fetchStation', 'clearError']),\n    \n    async handleSubmit() {\n      try {\n        if (this.isEditMode) {\n          await this.updateStation({\n            stationId: this.stationId,\n            stationData: this.stationData\n          });\n        } else {\n          await this.createStation(this.stationData);\n        }\n      } catch (error) {\n        console.error('Error saving station:', error);\n      }\n    },\n    \n    async loadStationData() {\n      if (this.stationId) {\n        this.isEditMode = true;\n        \n        try {\n          await this.fetchStation(this.stationId);\n          \n          if (this.currentStation) {\n            // Copy station data to form\n            this.stationData = {\n              name: this.currentStation.name,\n              status: this.currentStation.status,\n              address: this.currentStation.address || '',\n              location: {\n                latitude: this.currentStation.location.latitude,\n                longitude: this.currentStation.location.longitude\n              },\n              powerOutput: this.currentStation.powerOutput,\n              connectorType: this.currentStation.connectorType,\n              pricePerKwh: this.currentStation.pricePerKwh || 0,\n              availableHours: {\n                open: this.currentStation.availableHours?.open || '00:00',\n                close: this.currentStation.availableHours?.close || '23:59'\n              }\n            };\n          }\n        } catch (error) {\n          console.error('Error loading station:', error);\n          this.$router.push('/stations');\n        }\n      }\n    }\n  },\n  created() {\n    this.clearError();\n    this.loadStationData();\n  }\n}\n</script>\n\n<style scoped>\n@import url(\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\");\n\n.station-form {\n  padding-bottom: 2rem;\n}\n\nh4 {\n  color: #495057;\n  border-bottom: 1px solid #dee2e6;\n  padding-bottom: 0.5rem;\n}\n</style>\n"],"mappings":"AAwLA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXF,IAAI,EAAE,EAAE;QACRG,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;UACRC,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE;QACb,CAAC;QACDC,WAAW,EAAE,IAAI;QACjBC,aAAa,EAAE,QAAQ;QACvBC,WAAW,EAAE,CAAC;QACdC,cAAc,EAAE;UACdC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE;QACT;MACF,CAAC;MACDC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGhB,UAAU,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;IACrDiB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGtB,UAAU,CAAC,CAAC,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IAE/E,MAAMuB,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,IAAI,IAAI,CAACP,UAAU,EAAE;UACnB,MAAM,IAAI,CAACQ,aAAa,CAAC;YACvBN,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBd,WAAW,EAAE,IAAI,CAACA;UACpB,CAAC,CAAC;QACJ,OAAO;UACL,MAAM,IAAI,CAACqB,aAAa,CAAC,IAAI,CAACrB,WAAW,CAAC;QAC5C;MACF,EAAE,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAED,MAAME,eAAeA,CAAA,EAAG;MACtB,IAAI,IAAI,CAACV,SAAS,EAAE;QAClB,IAAI,CAACF,UAAS,GAAI,IAAI;QAEtB,IAAI;UACF,MAAM,IAAI,CAACa,YAAY,CAAC,IAAI,CAACX,SAAS,CAAC;UAEvC,IAAI,IAAI,CAACY,cAAc,EAAE;YACvB;YACA,IAAI,CAAC1B,WAAU,GAAI;cACjBF,IAAI,EAAE,IAAI,CAAC4B,cAAc,CAAC5B,IAAI;cAC9BG,MAAM,EAAE,IAAI,CAACyB,cAAc,CAACzB,MAAM;cAClCC,OAAO,EAAE,IAAI,CAACwB,cAAc,CAACxB,OAAM,IAAK,EAAE;cAC1CC,QAAQ,EAAE;gBACRC,QAAQ,EAAE,IAAI,CAACsB,cAAc,CAACvB,QAAQ,CAACC,QAAQ;gBAC/CC,SAAS,EAAE,IAAI,CAACqB,cAAc,CAACvB,QAAQ,CAACE;cAC1C,CAAC;cACDC,WAAW,EAAE,IAAI,CAACoB,cAAc,CAACpB,WAAW;cAC5CC,aAAa,EAAE,IAAI,CAACmB,cAAc,CAACnB,aAAa;cAChDC,WAAW,EAAE,IAAI,CAACkB,cAAc,CAAClB,WAAU,IAAK,CAAC;cACjDC,cAAc,EAAE;gBACdC,IAAI,EAAE,IAAI,CAACgB,cAAc,CAACjB,cAAc,EAAEC,IAAG,IAAK,OAAO;gBACzDC,KAAK,EAAE,IAAI,CAACe,cAAc,CAACjB,cAAc,EAAEE,KAAI,IAAK;cACtD;YACF,CAAC;UACH;QACF,EAAE,OAAOW,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;QAChC;MACF;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACN,eAAe,CAAC,CAAC;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}