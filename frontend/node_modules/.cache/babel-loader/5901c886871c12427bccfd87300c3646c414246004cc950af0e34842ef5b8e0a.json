{"ast":null,"code":"import axios from 'axios';\nimport router from '../../router';\nconst state = {\n  token: null,\n  user: null\n};\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  token: state => state.token,\n  user: state => state.user\n};\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER(state, user) {\n    state.user = user;\n  },\n  CLEAR_AUTH(state) {\n    state.token = null;\n    state.user = null;\n  }\n};\nconst actions = {\n  // Register a new user\n  async register({\n    commit,\n    dispatch\n  }, userData) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        token,\n        ...user\n      } = response.data;\n\n      // Save token and user data\n      commit('SET_TOKEN', token);\n      commit('SET_USER', user);\n\n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      dispatch('setSuccess', 'Registration successful!', {\n        root: true\n      });\n      router.push('/');\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch('setError', message, {\n        root: true\n      });\n      throw error;\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  // Login user\n  async login({\n    commit,\n    dispatch\n  }, credentials) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const response = await axios.post('/api/auth/login', credentials);\n      const {\n        token,\n        ...user\n      } = response.data;\n\n      // Save token and user data\n      commit('SET_TOKEN', token);\n      commit('SET_USER', user);\n\n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      dispatch('setSuccess', 'Login successful!', {\n        root: true\n      });\n\n      // Redirect to intended destination or home\n      const redirectPath = router.currentRoute.value.query.redirect || '/';\n      router.push(redirectPath);\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      dispatch('setError', message, {\n        root: true\n      });\n      throw error;\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  },\n  // Logout user\n  logout({\n    commit,\n    dispatch\n  }) {\n    // Clear auth data\n    commit('CLEAR_AUTH');\n\n    // Remove auth header\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch('setSuccess', 'Logged out successfully', {\n      root: true\n    });\n    router.push('/login');\n  },\n  // Initialize auth from stored token\n  initAuth({\n    commit,\n    dispatch,\n    state\n  }) {\n    const token = state.token;\n    if (token) {\n      // Set auth header for requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Get user profile if we have token but no user data\n      if (!state.user) {\n        dispatch('fetchUserProfile');\n      }\n    }\n  },\n  // Fetch user profile\n  async fetchUserProfile({\n    commit,\n    dispatch\n  }) {\n    try {\n      dispatch('setLoading', true, {\n        root: true\n      });\n      const response = await axios.get('/api/auth/profile');\n      commit('SET_USER', response.data);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      // If unauthorized, logout\n      if (error.response?.status === 401) {\n        dispatch('logout');\n      }\n    } finally {\n      dispatch('setLoading', false, {\n        root: true\n      });\n    }\n  }\n};\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","router","state","token","user","getters","isLoggedIn","mutations","SET_TOKEN","SET_USER","CLEAR_AUTH","actions","register","commit","dispatch","userData","root","response","post","data","defaults","headers","common","push","error","message","login","credentials","redirectPath","currentRoute","value","query","redirect","logout","initAuth","fetchUserProfile","get","console","status"],"sources":["C:/Users/admin/OneDrive/Desktop/3june/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\nimport router from '../../router'\n\nconst state = {\n  token: null,\n  user: null\n}\n\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  token: state => state.token,\n  user: state => state.user\n}\n\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_USER(state, user) {\n    state.user = user\n  },\n  CLEAR_AUTH(state) {\n    state.token = null\n    state.user = null\n  }\n}\n\nconst actions = {\n  // Register a new user\n  async register({ commit, dispatch }, userData) {\n    try {\n      dispatch('setLoading', true, { root: true })\n      const response = await axios.post('/api/auth/register', userData)\n      const { token, ...user } = response.data\n      \n      // Save token and user data\n      commit('SET_TOKEN', token)\n      commit('SET_USER', user)\n      \n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      \n      dispatch('setSuccess', 'Registration successful!', { root: true })\n      router.push('/')\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed'\n      dispatch('setError', message, { root: true })\n      throw error\n    } finally {\n      dispatch('setLoading', false, { root: true })\n    }\n  },\n  \n  // Login user\n  async login({ commit, dispatch }, credentials) {\n    try {\n      dispatch('setLoading', true, { root: true })\n      const response = await axios.post('/api/auth/login', credentials)\n      const { token, ...user } = response.data\n      \n      // Save token and user data\n      commit('SET_TOKEN', token)\n      commit('SET_USER', user)\n      \n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      \n      dispatch('setSuccess', 'Login successful!', { root: true })\n      \n      // Redirect to intended destination or home\n      const redirectPath = router.currentRoute.value.query.redirect || '/'\n      router.push(redirectPath)\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed'\n      dispatch('setError', message, { root: true })\n      throw error\n    } finally {\n      dispatch('setLoading', false, { root: true })\n    }\n  },\n  \n  // Logout user\n  logout({ commit, dispatch }) {\n    // Clear auth data\n    commit('CLEAR_AUTH')\n    \n    // Remove auth header\n    delete axios.defaults.headers.common['Authorization']\n    \n    dispatch('setSuccess', 'Logged out successfully', { root: true })\n    router.push('/login')\n  },\n  \n  // Initialize auth from stored token\n  initAuth({ commit, dispatch, state }) {\n    const token = state.token\n    \n    if (token) {\n      // Set auth header for requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      \n      // Get user profile if we have token but no user data\n      if (!state.user) {\n        dispatch('fetchUserProfile')\n      }\n    }\n  },\n  \n  // Fetch user profile\n  async fetchUserProfile({ commit, dispatch }) {\n    try {\n      dispatch('setLoading', true, { root: true })\n      const response = await axios.get('/api/auth/profile')\n      commit('SET_USER', response.data)\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error)\n      // If unauthorized, logout\n      if (error.response?.status === 401) {\n        dispatch('logout')\n      }\n    } finally {\n      dispatch('setLoading', false, { root: true })\n    }\n  }\n}\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}