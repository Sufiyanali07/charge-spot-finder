{"ast":null,"code":"import { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'StationList',\n  data() {\n    return {\n      filters: {\n        status: '',\n        connectorType: '',\n        minPower: '',\n        maxPower: ''\n      },\n      showDeleteModal: false,\n      stationToDelete: null\n    };\n  },\n  computed: {\n    ...mapGetters(['loading', 'filteredStations', 'isLoggedIn', 'user'])\n  },\n  methods: {\n    ...mapActions(['fetchStations', 'setFilters', 'resetFilters', 'deleteStation']),\n    applyFilters() {\n      this.setFilters(this.filters);\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        'Active': 'badge bg-success',\n        'Inactive': 'badge bg-secondary',\n        'Maintenance': 'badge bg-warning text-dark'\n      };\n      return classes[status] || 'badge bg-secondary';\n    },\n    viewOnMap(station) {\n      this.$router.push({\n        name: 'MapView',\n        query: {\n          lat: station.location.latitude,\n          lng: station.location.longitude,\n          id: station._id\n        }\n      });\n    },\n    canManageStation(station) {\n      if (!this.isLoggedIn || !this.user) return false;\n\n      // User can manage if they are the owner or an admin\n      return station.owner?._id === this.user._id || this.user.role === 'admin';\n    },\n    confirmDelete(station) {\n      this.stationToDelete = station;\n      this.showDeleteModal = true;\n    },\n    redirectToLogin() {\n      this.$router.push({\n        name: 'Login',\n        query: {\n          redirect: '/stations/new'\n        }\n      });\n    },\n    async handleStationDelete() {\n      if (!this.stationToDelete) return;\n      try {\n        await this.deleteStation(this.stationToDelete._id);\n        this.showDeleteModal = false;\n        this.stationToDelete = null;\n      } catch (error) {\n        console.error('Error deleting station:', error);\n      }\n    }\n  },\n  created() {\n    // Initialize filters from Vuex store\n    this.filters = {\n      ...this.$store.getters.filters\n    };\n\n    // Fetch stations on component creation\n    this.fetchStations();\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","name","data","filters","status","connectorType","minPower","maxPower","showDeleteModal","stationToDelete","computed","methods","applyFilters","setFilters","getStatusBadgeClass","classes","viewOnMap","station","$router","push","query","lat","location","latitude","lng","longitude","id","_id","canManageStation","isLoggedIn","user","owner","role","confirmDelete","redirectToLogin","redirect","handleStationDelete","deleteStation","error","console","created","$store","getters","fetchStations"],"sources":["C:\\Users\\admin\\OneDrive\\Desktop\\3june\\frontend\\src\\views\\StationList.vue"],"sourcesContent":["<template>\n  <div class=\"station-list\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2>Charging Stations</h2>\n      <router-link v-if=\"isLoggedIn\" to=\"/stations/new\" class=\"btn btn-primary\" id=\"addStationBtn\">\n        <i class=\"bi bi-plus-circle\"></i> Add New Station\n      </router-link>\n      <button v-else @click=\"redirectToLogin\" class=\"btn btn-outline-primary\">\n        <i class=\"bi bi-box-arrow-in-right\"></i> Login to Add Station\n      </button>\n    </div>\n\n    <!-- Filter Section -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header bg-light\">\n        <h5 class=\"mb-0\">Filters</h5>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-3 mb-3\">\n            <label for=\"statusFilter\" class=\"form-label\">Status</label>\n            <select \n              id=\"statusFilter\" \n              class=\"form-select\" \n              v-model=\"filters.status\"\n              @change=\"applyFilters\"\n            >\n              <option value=\"\">All Statuses</option>\n              <option value=\"Active\">Active</option>\n              <option value=\"Inactive\">Inactive</option>\n              <option value=\"Maintenance\">Maintenance</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-3 mb-3\">\n            <label for=\"connectorFilter\" class=\"form-label\">Connector Type</label>\n            <select \n              id=\"connectorFilter\" \n              class=\"form-select\" \n              v-model=\"filters.connectorType\"\n              @change=\"applyFilters\"\n            >\n              <option value=\"\">All Connectors</option>\n              <option value=\"Type 1\">Type 1</option>\n              <option value=\"Type 2\">Type 2</option>\n              <option value=\"CCS\">CCS</option>\n              <option value=\"CHAdeMO\">CHAdeMO</option>\n              <option value=\"Tesla\">Tesla</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-3 mb-3\">\n            <label for=\"minPowerFilter\" class=\"form-label\">Min Power (kW)</label>\n            <input \n              type=\"number\" \n              id=\"minPowerFilter\" \n              class=\"form-control\" \n              v-model=\"filters.minPower\"\n              min=\"0\"\n              @change=\"applyFilters\"\n            >\n          </div>\n          \n          <div class=\"col-md-3 mb-3\">\n            <label for=\"maxPowerFilter\" class=\"form-label\">Max Power (kW)</label>\n            <input \n              type=\"number\" \n              id=\"maxPowerFilter\" \n              class=\"form-control\" \n              v-model=\"filters.maxPower\"\n              min=\"0\"\n              @change=\"applyFilters\"\n            >\n          </div>\n        </div>\n        \n        <div class=\"d-flex justify-content-end\">\n          <button class=\"btn btn-secondary\" @click=\"resetFilters\">\n            Reset Filters\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading Spinner -->\n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading stations...</p>\n    </div>\n\n    <!-- No Stations Message -->\n    <div v-else-if=\"filteredStations.length === 0\" class=\"alert alert-info\">\n      No charging stations found. Please try different filters or add a new station.\n    </div>\n\n    <!-- Stations List -->\n    <div v-else class=\"row\">\n      <div v-for=\"station in filteredStations\" :key=\"station._id\" class=\"col-md-6 col-lg-4 mb-4\">\n        <div class=\"card h-100\">\n          <div class=\"card-header d-flex justify-content-between align-items-center\">\n            <h5 class=\"mb-0\">{{ station.name }}</h5>\n            <span :class=\"getStatusBadgeClass(station.status)\">\n              {{ station.status }}\n            </span>\n          </div>\n          <div class=\"card-body\">\n            <p v-if=\"station.address\" class=\"mb-2\">\n              <i class=\"bi bi-geo-alt\"></i> {{ station.address }}\n            </p>\n            <p class=\"mb-2\">\n              <i class=\"bi bi-lightning-charge\"></i> {{ station.powerOutput }} kW\n            </p>\n            <p class=\"mb-2\">\n              <i class=\"bi bi-plug\"></i> {{ station.connectorType }}\n            </p>\n            <p v-if=\"station.pricePerKwh\" class=\"mb-2\">\n              <i class=\"bi bi-currency-dollar\"></i> {{ station.pricePerKwh }} per kWh\n            </p>\n            <p class=\"mb-0 text-muted\">\n              <small>Added by: {{ station.owner?.username || 'Unknown' }}</small>\n            </p>\n          </div>\n          <div class=\"card-footer bg-white border-top-0\">\n            <div class=\"d-flex justify-content-between\">\n              <button \n                class=\"btn btn-sm btn-outline-primary\"\n                @click=\"viewOnMap(station)\"\n              >\n                <i class=\"bi bi-map\"></i> View on Map\n              </button>\n              \n              <div v-if=\"canManageStation(station)\">\n                <router-link \n                  :to=\"`/stations/${station._id}/edit`\" \n                  class=\"btn btn-sm btn-outline-secondary me-1\"\n                >\n                  <i class=\"bi bi-pencil\"></i> Edit\n                </router-link>\n                <button \n                  class=\"btn btn-sm btn-outline-danger\"\n                  @click=\"confirmDelete(station)\"\n                >\n                  <i class=\"bi bi-trash\"></i> Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal fade show\" style=\"display: block; background-color: rgba(0,0,0,0.5)\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Confirm Delete</h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showDeleteModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <p>Are you sure you want to delete the charging station \"{{ stationToDelete?.name }}\"?</p>\n            <p class=\"text-danger\">This action cannot be undone.</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showDeleteModal = false\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteStation\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'StationList',\n  data() {\n    return {\n      filters: {\n        status: '',\n        connectorType: '',\n        minPower: '',\n        maxPower: ''\n      },\n      showDeleteModal: false,\n      stationToDelete: null\n    }\n  },\n  computed: {\n    ...mapGetters(['loading', 'filteredStations', 'isLoggedIn', 'user']),\n  },\n  methods: {\n    ...mapActions(['fetchStations', 'setFilters', 'resetFilters', 'deleteStation']),\n    \n    applyFilters() {\n      this.setFilters(this.filters);\n    },\n    \n    getStatusBadgeClass(status) {\n      const classes = {\n        'Active': 'badge bg-success',\n        'Inactive': 'badge bg-secondary',\n        'Maintenance': 'badge bg-warning text-dark'\n      };\n      return classes[status] || 'badge bg-secondary';\n    },\n    \n    viewOnMap(station) {\n      this.$router.push({ \n        name: 'MapView', \n        query: { \n          lat: station.location.latitude, \n          lng: station.location.longitude,\n          id: station._id\n        } \n      });\n    },\n    \n    canManageStation(station) {\n      if (!this.isLoggedIn || !this.user) return false;\n      \n      // User can manage if they are the owner or an admin\n      return (station.owner?._id === this.user._id) || (this.user.role === 'admin');\n    },\n    \n    confirmDelete(station) {\n      this.stationToDelete = station;\n      this.showDeleteModal = true;\n    },\n    \n    redirectToLogin() {\n      this.$router.push({ \n        name: 'Login', \n        query: { redirect: '/stations/new' }\n      });\n    },\n    \n    async handleStationDelete() {\n      if (!this.stationToDelete) return;\n      \n      try {\n        await this.deleteStation(this.stationToDelete._id);\n        this.showDeleteModal = false;\n        this.stationToDelete = null;\n      } catch (error) {\n        console.error('Error deleting station:', error);\n      }\n    }\n  },\n  created() {\n    // Initialize filters from Vuex store\n    this.filters = { ...this.$store.getters.filters };\n    \n    // Fetch stations on component creation\n    this.fetchStations();\n  }\n}\n</script>\n\n<style scoped>\n@import url(\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\");\n\n.station-list {\n  padding-bottom: 2rem;\n}\n\n.card {\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 20px rgba(0,0,0,0.1);\n}\n\n/* Modal backdrop */\n.modal {\n  backdrop-filter: blur(5px);\n}\n</style>\n"],"mappings":"AAgLA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,UAAU,CAAC,CAAC,SAAS,EAAE,kBAAkB,EAAE,YAAY,EAAE,MAAM,CAAC;EACrE,CAAC;EACDW,OAAO,EAAE;IACP,GAAGZ,UAAU,CAAC,CAAC,eAAe,EAAE,YAAY,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;IAE/Ea,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,UAAU,CAAC,IAAI,CAACV,OAAO,CAAC;IAC/B,CAAC;IAEDW,mBAAmBA,CAACV,MAAM,EAAE;MAC1B,MAAMW,OAAM,GAAI;QACd,QAAQ,EAAE,kBAAkB;QAC5B,UAAU,EAAE,oBAAoB;QAChC,aAAa,EAAE;MACjB,CAAC;MACD,OAAOA,OAAO,CAACX,MAAM,KAAK,oBAAoB;IAChD,CAAC;IAEDY,SAASA,CAACC,OAAO,EAAE;MACjB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAChBlB,IAAI,EAAE,SAAS;QACfmB,KAAK,EAAE;UACLC,GAAG,EAAEJ,OAAO,CAACK,QAAQ,CAACC,QAAQ;UAC9BC,GAAG,EAAEP,OAAO,CAACK,QAAQ,CAACG,SAAS;UAC/BC,EAAE,EAAET,OAAO,CAACU;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IAEDC,gBAAgBA,CAACX,OAAO,EAAE;MACxB,IAAI,CAAC,IAAI,CAACY,UAAS,IAAK,CAAC,IAAI,CAACC,IAAI,EAAE,OAAO,KAAK;;MAEhD;MACA,OAAQb,OAAO,CAACc,KAAK,EAAEJ,GAAE,KAAM,IAAI,CAACG,IAAI,CAACH,GAAG,IAAM,IAAI,CAACG,IAAI,CAACE,IAAG,KAAM,OAAQ;IAC/E,CAAC;IAEDC,aAAaA,CAAChB,OAAO,EAAE;MACrB,IAAI,CAACR,eAAc,GAAIQ,OAAO;MAC9B,IAAI,CAACT,eAAc,GAAI,IAAI;IAC7B,CAAC;IAED0B,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAChB,OAAO,CAACC,IAAI,CAAC;QAChBlB,IAAI,EAAE,OAAO;QACbmB,KAAK,EAAE;UAAEe,QAAQ,EAAE;QAAgB;MACrC,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,mBAAmBA,CAAA,EAAG;MAC1B,IAAI,CAAC,IAAI,CAAC3B,eAAe,EAAE;MAE3B,IAAI;QACF,MAAM,IAAI,CAAC4B,aAAa,CAAC,IAAI,CAAC5B,eAAe,CAACkB,GAAG,CAAC;QAClD,IAAI,CAACnB,eAAc,GAAI,KAAK;QAC5B,IAAI,CAACC,eAAc,GAAI,IAAI;MAC7B,EAAE,OAAO6B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACrC,OAAM,GAAI;MAAE,GAAG,IAAI,CAACsC,MAAM,CAACC,OAAO,CAACvC;IAAQ,CAAC;;IAEjD;IACA,IAAI,CAACwC,aAAa,CAAC,CAAC;EACtB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}