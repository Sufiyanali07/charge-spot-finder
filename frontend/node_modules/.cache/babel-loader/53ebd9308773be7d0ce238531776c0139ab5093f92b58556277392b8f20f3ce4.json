{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'Profile',\n  computed: {\n    ...mapGetters(['user', 'loading', 'allStations']),\n    userStations() {\n      if (!this.user || !this.allStations) return [];\n      return this.allStations.filter(station => station.owner?._id === this.user._id);\n    }\n  },\n  methods: {\n    ...mapActions(['fetchUserProfile', 'fetchStations']),\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        'Active': 'badge bg-success',\n        'Inactive': 'badge bg-secondary',\n        'Maintenance': 'badge bg-warning text-dark'\n      };\n      return classes[status] || 'badge bg-secondary';\n    }\n  },\n  created() {\n    this.fetchUserProfile();\n    this.fetchStations();\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","name","computed","userStations","user","allStations","filter","station","owner","_id","methods","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getStatusBadgeClass","status","classes","created","fetchUserProfile","fetchStations"],"sources":["C:\\Users\\admin\\OneDrive\\Desktop\\3june\\frontend\\src\\views\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-page\">\n    <h2 class=\"mb-4\">User Profile</h2>\n    \n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading profile...</p>\n    </div>\n    \n    <div v-else-if=\"user\" class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header bg-primary text-white\">\n            <h4 class=\"mb-0\">Account Information</h4>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Username</label>\n              <input type=\"text\" class=\"form-control\" :value=\"user.username\" disabled>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Email</label>\n              <input type=\"email\" class=\"form-control\" :value=\"user.email\" disabled>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Role</label>\n              <input type=\"text\" class=\"form-control\" :value=\"user.role\" disabled>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Member Since</label>\n              <input type=\"text\" class=\"form-control\" :value=\"formatDate(user.createdAt)\" disabled>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header bg-primary text-white\">\n            <h4 class=\"mb-0\">Your Stations</h4>\n          </div>\n          <div class=\"card-body\">\n            <div v-if=\"userStations.length === 0\" class=\"text-center py-4\">\n              <p>You haven't added any charging stations yet.</p>\n              <router-link to=\"/stations/new\" class=\"btn btn-primary\">\n                Add Your First Station\n              </router-link>\n            </div>\n            <div v-else>\n              <div class=\"list-group\">\n                <router-link \n                  v-for=\"station in userStations\" \n                  :key=\"station._id\"\n                  :to=\"`/stations/${station._id}/edit`\"\n                  class=\"list-group-item list-group-item-action\"\n                >\n                  <div class=\"d-flex w-100 justify-content-between\">\n                    <h5 class=\"mb-1\">{{ station.name }}</h5>\n                    <span :class=\"getStatusBadgeClass(station.status)\">\n                      {{ station.status }}\n                    </span>\n                  </div>\n                  <p class=\"mb-1\">{{ station.connectorType }} - {{ station.powerOutput }} kW</p>\n                  <small>Added: {{ formatDate(station.createdAt) }}</small>\n                </router-link>\n              </div>\n              <div class=\"mt-3 text-end\">\n                <router-link to=\"/stations/new\" class=\"btn btn-primary\">\n                  Add New Station\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'Profile',\n  computed: {\n    ...mapGetters(['user', 'loading', 'allStations']),\n    userStations() {\n      if (!this.user || !this.allStations) return [];\n      return this.allStations.filter(station => station.owner?._id === this.user._id);\n    }\n  },\n  methods: {\n    ...mapActions(['fetchUserProfile', 'fetchStations']),\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        'Active': 'badge bg-success',\n        'Inactive': 'badge bg-secondary',\n        'Maintenance': 'badge bg-warning text-dark'\n      };\n      return classes[status] || 'badge bg-secondary';\n    }\n  },\n  created() {\n    this.fetchUserProfile();\n    this.fetchStations();\n  }\n}\n</script>\n\n<style scoped>\n.profile-page {\n  padding-bottom: 2rem;\n}\n\n.card {\n  margin-bottom: 1.5rem;\n}\n</style>\n"],"mappings":"AAkFA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE;IACR,GAAGH,UAAU,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;IACjDI,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACC,IAAG,IAAK,CAAC,IAAI,CAACC,WAAW,EAAE,OAAO,EAAE;MAC9C,OAAO,IAAI,CAACA,WAAW,CAACC,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,KAAK,EAAEC,GAAE,KAAM,IAAI,CAACL,IAAI,CAACK,GAAG,CAAC;IACjF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGV,UAAU,CAAC,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;IACpDW,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK;MAC7B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,CAAC;IACJ,CAAC;IACDC,mBAAmBA,CAACC,MAAM,EAAE;MAC1B,MAAMC,OAAM,GAAI;QACd,QAAQ,EAAE,kBAAkB;QAC5B,UAAU,EAAE,oBAAoB;QAChC,aAAa,EAAE;MACjB,CAAC;MACD,OAAOA,OAAO,CAACD,MAAM,KAAK,oBAAoB;IAChD;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}